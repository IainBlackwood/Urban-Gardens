@using GridMvc.Html
@using AcleUrbanGardens.Web.Helpers
@model AcleUrbanGardens.Web.Models.IndexCategoryViewModel

@{
    ViewBag.Title = "Categories";
}

<h2 style="text-align:center">@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Administration Panel", "Index", "Admin", new { @class = "btn btn-primary btn-large" })
    @Html.ActionLink("Create New", "Create", "Category", new { @class = "btn btn-primary btn-large" })
</p>
<div style="border: 1px solid; border-radius: 5px; padding:10px">
    <div>
        @using (Html.BeginForm("Index", "Category", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                    @{
                        if (Model.RowsPerPage == 0)
                        {
                            <b>Display All Records</b>
                        }
                        else
                        {
                            <b>Display @Model.RowsPerPage Records</b>
                        }
                    }
                    <span class="caret"></span>
                </button>

                <ul class="dropdown-menu">

                    @{
                        foreach (var option in Model.RowOptions)
                        {
                            <li>@Html.ActionLink("Display " + option.Key + " Records", null, null, new { numRows = option.Value }, new { @class = "btn btn-primary" })</li>
                        }
                    }
                </ul>
            </div>
         }
    </div>
    <div>
        @Html.Grid(Model.Categories).Columns(columns =>
        {
            /* Adding "Name" column: */
            columns.Add(c => c.Name)
                    .Encoded(false)
                    .Sanitized(false)
                    .Titled("Name")
                    .RenderValueAs(c =>
                    @<b>
                        @Html.ActionLink(c.Name, "Details", "Category", new { c.Id }, new { @class = "btn btn-primary" })
                    </b>);

           /* Adding "Description" column: */
           columns.Add(c => c.Description)
                   .Filterable(true)
                   .Titled("Description");

           /* Adding "Description" column: */
           columns.Add(c => c.ImagePath)
               .Encoded(false)
               .Sanitized(false)
               .Titled("Image")
               .RenderValueAs(c =>
                    @Html.ActionImage("Details", "Product", new { c.Id }, "~/Content/Images/" + c.ImagePath, "Details", "200px", "40px")
               );

           /* Adding "IsDeleted" column: */
           columns.Add(c => c.IsDeleted)
               .Titled("Is Deleted")
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(40)
               .RenderValueAs(o => Html.CheckBox("checked", false));

           /* Adding not mapped column, that renders body, using inline Razor html helper */
           columns.Add()
                   .Encoded(false)
                   .Sanitized(false)
                   .RenderValueAs(c =>
                @<b>
                    @Html.ActionLink("Create " + c.Name + " Sub-Category", "CreateSubCategory", "Category", new { categoryId = c.Id }, new { @class = "btn btn-primary" })
                </b>);

        }).SetRowCssClasses(item => item.IsDeleted ? "warning" : string.Empty).WithPaging(Model.RowsPerPage).Sortable().Filterable().WithMultipleFilters().Selectable(false)</div>
</div>