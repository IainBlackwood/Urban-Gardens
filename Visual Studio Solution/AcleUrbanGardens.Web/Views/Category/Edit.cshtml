@using AcleUrbanGardens.Web.Models;
@using AcleUrbanGardens.Web.Helpers;
@model EditCategoryViewModel

@{
    ViewBag.Title = Model.Name;
}

<div class="container" id="Edit">
    <div class="row">
        <div class="col-lg-2 col-md-2 col-sm-2">
            <div id="categoryTreeView" class="jumbotron container-fluid" style="box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);">
                <p>Category tree view</p>
                @RenderCategoryTreeView()
            </div>
        </div>
        <div class="col-lg-10 col-md-10 col-sm-10">
            <div class="container">
                <br />
                <div id="categorydetail" class="jumbotron container-fluid" style="box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);">
                    <h2>Edit @Model.Name</h2>
                    @RenderCategoryDetail()
                </div>
            </div>
        </div>
    </div>
</div>

@helper RenderCategoryTreeView()
{ 
   <p>TODO: create the tree view!</p>
}

@helper RenderCategoryDetail()
{
    if (!string.Equals(Model.Name, Constants.CATEGORY_UNASSIGNED_PRODUCTS))
    {
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
                @using (Html.BeginForm("Edit", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <!--hidden fields no need for formatting-->
                    @Html.DisplayFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => model.UpdateDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.EditorFor(model => model.ImageIsUpdated, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="text-align: right">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-12" style="border: 1px solid gray; border-radius: 5px; max-width:500px;">
                            @{  if (Model.ImageIsUpdated)
                                {
                                    <img src="~/Content/Images/temp/@Model.ImagePath" style="max-width: 100%; height: auto; width: auto\9;"/>
                                }
                                else
                                {
                                    <img src="~/Content/Images/@Model.ImagePath" style="max-width: 100%; height: auto; width: auto\9;"/>
                                }
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12" style="border: 1px solid gray; border-radius: 5px;">
                            @using (Html.BeginForm("UpdateImage", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.HiddenFor(model => model.Id)
                                <label for="file">Upload Image:</label>
                                <input type="file" name="file" id="file" class="btn-group"/><br>
                                <input type="submit" value="Upload Image" class="btn btn-primary btn-sm"/>
                                @*@Ajax.ActionLink("Update Image", "UpdateImage", "Category", new { id = Model.Id }, new AjaxOptions { HttpMethod = "POST" }, new { @class = "btn btn-primary", title = "Upload Image" })*@
                                <br><br>
                                @ViewBag.Message
                            }
                           
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="form-group">
                    <div>
                        @Html.ActionLink("Back to Categories", "Index", "Category", new { Id = Model.Id }, new { @class = "btn btn-primary", title = "Back to Categories" })
                        @Html.ActionLink("Back to Detail", "Details", "Category", new { Id = Model.Id }, new { @class = "btn btn-primary", title = "Back to Category Details" })
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div>
            <h2>You cannot edit the Category: @Model.Name</h2>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
            </dl>
        </div>
    }
}